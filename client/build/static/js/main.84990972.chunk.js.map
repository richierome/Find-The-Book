{"version":3,"sources":["components/List/index.js","components/Books/index.js","components/FormSearch/formsearch.js","utilities/API.js","pages/search.js","pages/save.js","pages/notFound.js","components/Navigate/navigate.js","components/Footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["List","_ref","children","react_default","a","createElement","className","ListItem","_ref2","Books","str","length","ending","title","authors","url","synopsis","image","Button","truncateDescription","substring","src","alt","href","target","rel","FormSearch","q","handleInputChange","handleFormSubmit","role","htmlFor","id","type","value","placeholder","name","onChange","size","required","onClick","API","getBooks","axios","get","params","getSavedBooks","deleteBook","delete","saveBook","bookData","post","Search","state","books","message","event","_event$target","_this","setState","Object","defineProperty","then","res","data","currentPage","catch","toast","error","preventDefault","info","handleBookSave","book","find","googleId","volumeInfo","infoURL","imageLinks","thumbnail","_this2","this","formsearch","List_List","map","components_Books","key","join","Component","Saved","err","console","log","handleBookDelete","_callee","originalBooks","regenerator_default","wrap","_context","prev","next","t0","response","status","stop","count","_id","NotFound","NavBar","Fragment","react_router_dom","to","Footer","App","react_toastify","Navigate_navigate","react_router","path","component","from","exact","footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.84990972.chunk.js","sourcesContent":["import React from \"react\";\n\n// This component exports both the List and ListItem components\n\nexport const List = ({ children }) => (\n    <ul className=\"list-group\">{children}</ul>\n);\n\nexport function ListItem({ children }) {\n    return <li className=\"list-group-item\">{children}</li>;\n}","import React from \"react\";\nimport \"./style.css\";\nimport { ListItem } from \"../List\";\n\nconst Books = ({\n    title,\n    authors,\n    url,\n    synopsis,\n    image,\n    Button\n}) => {\n    const truncateText = (str, length, ending) => {\n        if (str) {\n            if (length == null) {\n                length = 100;\n            }\n            if (ending == null) {\n                ending = \"...\";\n            }\n            if (str.length > length) {\n                return str.substring(0, length - ending.length) + ending;\n            } else {\n                return str;\n            }\n        }\n        return str;\n    };\n\n    const truncateDescription = truncateText(synopsis, 255, \"...\");\n\n    return (\n        <ListItem>\n            <div className=\"media-snippet\">\n                <article className=\"media\">\n                    <figure className=\"media-left\">\n                        <p>\n                            <img className=\"image is-128xauto\" src={image} alt={title} />\n                        </p>\n                    </figure>\n                    <div className=\"media-content\">\n                        <h3 className=\"heading-title\">{title}</h3>\n                        <p className=\"heading-authors\">by {authors} (Author)</p>\n                        <p className=\"p-books\">{truncateDescription}</p>\n                        <div className=\"d-flex flex-row bd-highlight mb-3\">\n                            <div className=\"p-2 bd-highlight\">\n                                <a\n                                    href={url}\n                                    className=\"btn view-button heading-authors ml-2\"\n                                    target=\"_blank\"\n                                    rel=\"noopener noreferrer\"\n                                >\n                                    View\n                </a>\n                            </div>\n                            <div className=\"p-2 bd-highlight\">\n                                <Button />\n                            </div>\n                        </div>\n                    </div>\n                </article>\n            </div>\n        </ListItem>\n    );\n};\n\nexport default Books;","import React from \"react\";\nimport \"./style.css\";\n\nfunction FormSearch({ q, handleInputChange, handleFormSubmit }) {\n    return (\n        // eslint-disable-next-line jsx-a11y/no-redundant-roles\n        <form className=\"form-inline\" role=\"form\">\n            <div className=\"form-group mx-sm-3 mb-2\">\n                <label htmlFor=\"Title\" className=\"sr-only\">\n                    Search Book Title\n        </label>\n                <input\n                    className=\"form-control heading-subtitle \"\n                    id=\"Title\"\n                    type=\"text\"\n                    value={q}\n                    placeholder=\"Book Title...\"\n                    name=\"q\"\n                    onChange={handleInputChange}\n                    size=\"55\"\n                    required\n                />\n            </div>\n            <button\n                onClick={handleFormSubmit}\n                type=\"submit\"\n                className=\"btn btn-lg search-button heading-subtitle\"\n            >\n                Search\n      </button>\n        </form>\n    );\n}\n\nexport default FormSearch;","import axios from \"axios\";\n\nexport default {\n  // Gets books from the Google API\n  getBooks: function(q) {\n    return axios.get(\"/api/google\", { params: { q: \"title:\" + q } });\n  },\n  // Gets all saved books\n  getSavedBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Deletes the saved book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves an book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  }\n};\n\n\n\n\n\n","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport Book from \"../components/Books/index\";\nimport SearchForm from \"../components/FormSearch/formsearch\";\nimport { List } from \"../components/List/index\";\nimport API from \"../utilities/API\";\n\nclass Search extends Component {\n    state = {\n        books: [],\n        q: \"\",\n        message: \"Simply search for books via the Google Books API\"\n    };\n\n    handleInputChange = event => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value\n        });\n    };\n\n    getBooks = () => {\n        API.getBooks(this.state.q)\n            .then(res =>\n                this.setState({\n                    books: res.data,\n                    currentPage: 1\n                })\n            )\n            .catch(() => {\n                toast.error(\"Your search did not match any book results.\");\n\n                this.setState({\n                    books: [],\n                    message: \"Your search did not match any book results.\",\n                    currentPage: 1\n                });\n            });\n    };\n\n    handleFormSubmit = event => {\n        event.preventDefault();\n        toast.info(\"Searching books... !\");\n        this.getBooks();\n    };\n\n    handleBookSave = id => {\n        const book = this.state.books.find(book => book.id === id);\n\n        API.saveBook({\n            googleId: book.id,\n            title: book.volumeInfo.title,\n            url: book.volumeInfo.infoURL,\n            authors: book.volumeInfo.authors,\n            synopsis: book.volumeInfo.synopsis,\n            image: book.volumeInfo.imageLinks.thumbnail\n        }).then(() => this.getBooks());\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-10 col-centered\">\n                        <div className=\"d-flex flex-wrap flex-row bd-highlight mb-3 justify-content-center align-items-center\">\n                            <div className=\"order-sm-2 p-2 bd-highlight\">\n                                <img\n                                    className=\"image-250\"\n                                    src=\"/images/img-books-window.jpg\"\n                                    alt=\"React Google Books Search\"\n                                />\n                            </div>\n                            <div className=\"order-sm-1 p-2 bd-highlight\">\n                                <h1 className=\"heading-title mx-sm-3 mb-2\">\n                                    React Google Books Search\n                </h1>\n                                <h2 className=\"heading-subtitle mx-sm-3 mb-2\">\n                                    Search for and Save Books of Interest.\n                </h2>\n                                <SearchForm\n                                    handleInputChange={this.handleInputChange}\n                                    handleFormSubmit={this.handleFormSubmit}\n                                    q={this.state.q}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-10 col-centered card-content mb-4\">\n                        <h1 className=\"heading-title mx-sm-3 mb-2 text-center\">Results</h1>\n\n                        {this.state.books.length ? (\n                            <List>\n                                {this.state.books.map(book => (\n                                    <Book\n                                        key={book.id}\n                                        title={book.volumeInfo.title}\n                                        url={book.volumeInfo.infoURL}\n                                        authors={book.volumeInfo.authors.join(\", \")}\n                                        synopsis={book.volumeInfo.synopsis}\n                                        image={book.volumeInfo.imageLinks.thumbnail}\n                                        Button={() => (\n                                            <button\n                                                onClick={() => this.handleBookSave(book.id)}\n                                                className=\"btn save-button  heading-subtitle ml-2\"\n                                            >\n                                                Save\n                      </button>\n                                        )}\n                                    />\n                                ))}\n                            </List>\n                        ) : (\n                                <div className=\"mockup-content\">\n                                    <h2 className=\"heading-title text-center\">\n                                        {this.state.message}\n                                    </h2>\n                                </div>\n                            )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Search;","import React, { Component } from \"react\";\nimport { toast } from \"react-toastify\";\nimport { List } from \"../components/List/index\";\nimport Book from \"../components/Books/index\";\nimport API from \"../utilities/API\";\n\nclass Saved extends Component {\n    state = {\n        books: []\n    };\n\n    componentDidMount() {\n        this.getSavedBooks();\n    }\n\n    getSavedBooks = () => {\n        API.getSavedBooks()\n            .then(res =>\n                this.setState({\n                    books: res.data\n                })\n            )\n            .catch(err => console.log(err));\n    };\n\n    handleBookDelete = async id => {\n        const originalBooks = this.state.books;\n        try {\n            await API.deleteBook(id).then(res => this.getSavedBooks());\n        } catch (ex) {\n            if (ex.response && ex.response.status === 404)\n                toast.error(\"This book has been deleted.\");\n            this.setState({ books: originalBooks });\n        }\n    };\n    render() {\n        const { length: count } = this.state.books;\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-8 col-centered\">\n                        <div className=\"d-flex flex-row bd-highlight mb-3 justify-content-center align-items-center\">\n                            <div className=\"p-2 bd-highlight\">\n                                <img\n                                    className=\"image-250\"\n                                    src=\"/images/img-books-window.jpg\"\n                                    alt=\"React Google Books Search\"\n                                />\n                            </div>\n                            <div className=\"p-2 bd-highlight\">\n                                <h1 className=\"heading-title mx-sm-3 mb-2\">\n                                    React Google Books Search\n                </h1>\n\n                                <h2 className=\"heading-subtitle mx-sm-3 mb-2 text-center\">\n                                    Showing {count} books in the database. \n                </h2>\n               \n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-8 col-centered card-content\">\n                        {this.state.books.length ? (\n                            <List>\n                                {this.state.books.map(book => (\n                                    <Book\n                                        key={book._id}\n                                        title={book.title}\n                                        url={book.url}\n                                        authors={book.authors.join(\", \")}\n                                        synopsis={book.synopsis}\n                                        image={book.image}\n                                        Button={() => (\n                                            <button\n                                                onClick={() => this.handleBookDelete(book._id)}\n                                                className=\"btn delete-button heading-subtitle ml-2\"\n                                            >\n                                                Delete\n                      </button>\n                                        )}\n                                    />\n                                ))}\n                            </List>\n                        ) : (\n                                <div className=\"mockup-content\"> \n                                    <h2 className=\"brand-title text-center\">\n                                                                  \n                                        No saved books in the database\n                                       \n                                        \n                </h2>\n                \n                                </div>\n                            )}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Saved;","import React from \"react\";\n\nconst NotFound = () => {\n    return <h1 className=\"heading-title text-center\">404 Page Not Found</h1>;\n};\n\nexport default NotFound;","import React from \"react\";\nimport { Link,  } from \"react-router-dom\";\nimport \"./style.css\";\nconst NavBar = () => {\n    return (\n        <React.Fragment>\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\n                <Link className=\"navbar-brand brand-title\" to=\"#\">\n                    Google Books Search\n        </Link>\n                {/* <button\n                    className=\"navbar-toggler\"\n                    type=\"button\"\n                    data-toggle=\"collapse\"\n                    data-target=\"#navbarNav\"\n                    aria-controls=\"navbarNav\"\n                    aria-expanded=\"false\"\n                    aria-label=\"Toggle navigation\"\n                >\n                    <span className=\"navbar-toggler-icon\" />\n                </button> */}\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link heading-title\" to=\"/search\">\n                                Search\n              </Link>\n                        </li>\n                        <li className=\"nav-item\">\n                            <Link className=\"nav-link heading-title\" to=\"/saved\">\n                                Saved\n              </Link>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </React.Fragment>\n    );\n};\n\nexport default NavBar;","import React from \"react\";\nimport \"./style.css\";\n\nconst Footer = () => {\n    return (\n        <footer className=\"footer navbar-fixed-bottom has-background-tan text-center heading-authors\">\n            <p>Made with react</p>\n    </footer>\n    );\n};\n\nexport default Footer;","import React, { Component } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Route, Redirect, Switch,BrowserRouter } from \"react-router-dom\";\nimport Search from \"./pages/search\";\nimport Saved from \"./pages/save\";\nimport NotFound from \"./pages/notFound\";\nimport Navigate from \"./components/Navigate/navigate\";\nimport Footer from \"./components/Footer/footer\";\nimport \"./App.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n      <React.Fragment>\n        <ToastContainer />\n        <section className=\"hero-is-fullheight\">\n          <div className=\"head-head\">\n            <Navigate />\n          </div>\n          <div className=\"head-body\">\n            <Switch>\n              <Route path=\"/search\" component={Search} />\n              <Route path=\"/saved\" component={Saved} />\n              <Route path=\"/not-found\" component={NotFound} />\n              <Redirect from=\"/\" exact to=\"/search\" />\n              <Redirect to=\"/not-found\" />\n            </Switch>\n          </div>\n          <div className=\"head-foot\">\n            <Footer />\n          </div>\n        </section>\n      </React.Fragment>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}